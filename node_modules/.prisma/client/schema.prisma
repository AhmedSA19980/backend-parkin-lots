generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model booking {
  id           Int        @id @default(autoincrement())
  startTime    DateTime
  endTime      DateTime
  isBookedCompeleted Boolean
  userId       Int
  parkingLotId Int
  price       Float
  totalPrice  Float
  parkinglot   parkinglot @relation(fields: [parkingLotId], references: [id], map: "Booking_parkingLotId_fkey")
  user         user       @relation(fields: [userId], references: [id], map: "Booking_userId_fkey")
  capacityUsedDecremented Boolean @default(false)
  @@index([parkingLotId], map: "Booking_parkingLotId_fkey")
  @@index([userId], map: "Booking_userId_fkey")
}

model parkinglot {
  id           Int           @id @default(autoincrement())
  location     String
  capacity     Int
  capacityUsed Int
  hourlyRate   Float
  isParkDeleted Boolean @default(false)
  booking      booking[]
  vehicletype  vehicletype[] @relation("parkinglottovehicletype")
}


model user {
  id            Int       @id @default(autoincrement())
  name          String
  email         String    @unique(map: "User_email_key")
  password      String
  isuserdeleted Boolean   @default(false)
  booking       booking[]
  customersCard   customerpaymentCard[]

  @@unique([name, email])
}

model vehicletype {
  id         Int          @id @default(autoincrement())
  type       String
  parkinglot parkinglot[] @relation("parkinglottovehicletype")
}



model customerpaymentCard {
  id Int  @id @default(autoincrement())
  cardId   String 
  cardBrand String
  userCard    user @relation(fields: [userName,userEmail],references: [name,email])
  userName String
  userEmail String
  cardNumber String
  cardExpMonth String
  cardExpYear String
  cardCVC  String
  country   String


}